name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    paths:
      - "projects/**"

jobs:
  # Étape 1 : Détecter les projets modifiés
  changed_files:
    runs-on: ubuntu-latest
    outputs:
      changed_folders: ${{ steps.filter.outputs.changed_folders }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Clone tout l'historique Git

    - name: Detect changed projects
      id: filter
      run: |
        # Définit la base de comparaison pour git diff
        if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
          echo "Initial commit detected. Comparing against empty tree."
          base_ref=$(git hash-object -t tree /dev/null)
        else
          base_ref="${{ github.event.before }}"
        fi

        # Récupère les dossiers modifiés sous `projects/`
        projects=$(git diff --name-only $base_ref ${{ github.sha }} \
        | grep '^projects/' \
        | awk -F'/' '{print $2}' \
        | sort -u)

        # Exclut les entrées vides
        valid_projects=$(echo "$projects" | grep -v '^$')

        # Construit une liste JSON
        json_projects=$(echo "$valid_projects" | jq -R -s -c 'split("\n")[:-1]')
        echo "Detected modified projects: $json_projects"
        echo "::set-output name=changed_folders::$json_projects"

    - name: Debug changed projects
      run: |
        echo "Modified projects: ${{ steps.filter.outputs.changed_folders }}"

  # Étape 2 : Construire et pousser les images Docker pour chaque projet modifié
  build:
    runs-on: ubuntu-latest
    needs: changed_files
    strategy:
      matrix:
        folder: ${{ fromJson(needs.changed_files.outputs.changed_folders) }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Debug matrix folder
      run: |
        echo "Processing project folder: ${{ matrix.folder }}"

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - id: lower-repo
      name: Repository to lowercase
      run: |
        echo "repository=${github.repository_owner}" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: ./projects/${{ matrix.folder }}
        file: ./projects/${{ matrix.folder }}/Dockerfile
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/projects-${{ matrix.folder }}:latest

    - name: Logout from Docker
      run: docker logout ghcr.io